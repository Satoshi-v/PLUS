#!/bin/bash
clear

# Verifica se o arquivo de licença existe
if [[ -e /usr/lib/licence ]]; then
    database="/root/usuarios.db"

    # Função para exibir conexões via Dropbear
    fun_drop () {
        port_dropbear=$(ps aux | grep dropbear | awk NR==1 | awk '{print $17}')
        log="/var/log/auth.log"
        loginsukses="Password auth succeeded"
        pids=$(ps ax | grep dropbear | grep " $port_dropbear" | awk '{print $1}')

        for pid in $pids; do
            pidlogs=$(grep "$pid" "$log" | grep "$loginsukses" | awk '{print $3}')
            if [[ $pidlogs ]]; then
                login=$(grep "$pid" "$log" | grep "$pidlogs" | grep "$loginsukses")
                PID=$pid
                user=$(echo "$login" | awk '{print $10}' | sed -r "s/'/ /g")
                echo "$user $PID"
            fi
        done
    }

    # Função para calcular tempo de conexão
    calcular_tempo () {
        local inicio="$1"
        local atual="$2"
        local IFS=:
        read -r h1 m1 s1 <<<"$inicio"
        read -r h2 m2 s2 <<<"$atual"

        seg=$((10#$s2 - 10#$s1 + (10#$m2 - 10#$m1) * 60 + (10#$h2 - 10#$h1) * 3600))
        [[ $seg -lt 0 ]] && seg=0  # Evita valores negativos

        h=$(($seg / 3600))
        m=$((($seg % 3600) / 60))
        s=$(($seg % 60))
        printf "%02d:%02d:%02d" $h $m $s
    }

    # Cabeçalho
    echo -e "\033[1;44m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
    echo -e "\033[1;37m USUÁRIO         STATUS       CONEXÕES   TEMPO DE CONEXÃO \033[0m"
    echo -e "\033[1;44m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"

    # Processa cada linha do banco de dados
    while read -r usline; do
        user=$(echo "$usline" | cut -d' ' -f1)
        s2ssh=$(echo "$usline" | cut -d' ' -f2)

        sqd=$(ps -u "$user" | grep sshd | wc -l 2>/dev/null)
        [[ -z "$sqd" ]] && sqd=0

        ovp=0
        [[ -e /etc/openvpn/openvpn-status.log ]] && ovp=$(grep -E ",$user," /etc/openvpn/openvpn-status.log | wc -l)

        drop=$(fun_drop | grep -w "$user" | wc -l)

        conex=$((sqd + ovp + drop))
        timerr="00:00:00"

        if [[ $conex -gt 0 ]]; then
            if [[ $sqd -gt 0 ]]; then
                tst=$(ps -o etime=$(ps -u "$user" | grep sshd | awk 'NR==1 {print $1}') | awk 'NR==2 {print $1}')
                timerr=$(printf "%02d:%02d:%02d\n" $tst)
            elif [[ $ovp -gt 0 ]]; then
                inicio=$(grep -w "$user" /etc/openvpn/openvpn-status.log | awk '{print $4}' | head -1)
                atual=$(printf '%(%H:%M:%S)T\n')
                timerr=$(calcular_tempo "$inicio" "$atual")
            fi
        fi

        if [[ $conex -eq 0 ]]; then
            status="\033[1;31mOffline\033[1;33m"
        else
            status="\033[1;32mOnline\033[1;33m"
        fi

        # Exibição formatada
        printf "\033[1;33m %-15s %-10s %-10s %s\033[0m\n" "$user" "$status" "$conex/$s2ssh" "$timerr"
        echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
    done < "$database"
fi
